# @package _global_
defaults:
  - override /data: depth_estimation/hypersim_perscene
  - override /model@model: depth_estimation/depth_anything
  - override /callbacks: 
    - model_checkpoint_simple
    - train_speed_timer

pl_trainer:
  precision: 32
  limit_train_batches: 5000
  limit_val_batches: 100
  max_epochs: 5000
  log_every_n_steps: 50
  accumulate_grad_batches: 1 # * 8 if use only one gpu
  strategy: ddp_find_unused_parameters_true
  devices: 8

logger:
  _target_: pytorch_lightning.loggers.TensorBoardLogger
  save_dir: ${output_dir} # /save_dir/name/version/sub_dir
  name: ""
  version: "tb" # merge name and version

task: depth_estimation
# exp_name: may_depthanything_vits_arkitscenes_silog
exp_name: june_depthanythingmetric_overfit_hypersim_perscene

# data:
#   loader_opts:
#     train:
#       - batch_size: 2
#         num_workers: 4
#       - batch_size: 2
#         num_workers: 4
model:
  pipeline:
    _target_: lib.model.depth_estimation.depth_anything.depth_anything_upsample_fusion.DepthAnythingPipeline
    range_ratio: [1., 0., 0.] # 8x, 192x256, 8x--192x256
    block_type: 'featurefusiondepthblock'
    load_pretrain_backbone: null
    load_pretrain_net: ${oc.env:workspace}/cache_models/depth_anything/checkpoints/v2_model_metric_ftlht.ckpt
    normalize_disp_type: minmax
    loss_cfg:
      _target_: lib.model.depth_estimation.depth_anything.loss.L1loss_Gradient_upsample
      gradient_weight: 0.5

callbacks:
  model_checkpoint:
    _target_: pytorch_lightning.callbacks.ModelCheckpoint
    dirpath: ${output_dir}/checkpoints/
    filename: "e{epoch:03d}-s{step:06d}"
    save_last: null # additionally always save an exact copy of the last checkpoint to a file last.ckpt
    save_top_k: 1 # save k best models (determined by above metric)
    auto_insert_metric_name: False # when True, the checkpoints filenames will contain the metric name
    save_weights_only: True # if True, then only the modelâ€™s weights will be saved
    every_n_train_steps: null # number of training steps between checkpoints
    every_n_epochs: 50 # number of epochs between checkpoints